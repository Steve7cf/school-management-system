<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <title>Exam Results - School Management System</title>
    
    <!-- Bootstrap 5.3.2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome 6.5.1 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
</head>
<body class="bg-light m-0 p-0">
    <% if (typeof user !== 'undefined' && user) { %>
        <!-- Offcanvas sidebar -->
        <%- include('../../partials/offcanvas-sidebar') %>

        <!-- Navbar for authenticated users -->
        <%- include('../../partials/navbar') %>
    <% } %>

    <div class="container-fluid">
        <div class="row">
            <main class="col-12 main-content">
                <!-- Results Page -->
                <div class="container-fluid py-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="h3 mb-0">Exam Results</h2>
                        <div class="d-flex gap-2">
                            <button class="btn btn-info" onclick="window.location.href='/results/refresh'" title="Refresh Data">
                                <i class="fas fa-sync-alt me-2"></i>Refresh
                            </button>
                            <button class="btn btn-success" onclick="exportResults()">
                                <i class="fas fa-download me-2"></i>Export Results
                            </button>
                            <% if (user.role === 'teacher') { %>
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addResultModal">
                                    <i class="fas fa-plus me-2"></i>Add New Result
                                </button>
                            <% } %>
                        </div>
                    </div>
                    
                    <!-- Debug Info (only for admin) -->
                    <% if (user.role === 'admin') { %>
                    <div class="alert alert-info">
                        <small>
                            <strong>Debug Info:</strong> 
                            Page loaded at: <%= new Date().toLocaleString() %> | 
                            Total results: <%= results ? results.length : 0 %> |
                            <button class="btn btn-sm btn-outline-info" onclick="checkDataFreshness()">Check Data Freshness</button>
                        </small>
                    </div>
                    <% } %>

                    <!-- Search and Filter Section -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label for="searchInput" class="form-label">Search Student</label>
                                    <input type="text" class="form-control" id="searchInput" placeholder="Search by student name...">
                                </div>
                                <div class="col-md-3">
                                    <label for="classFilter" class="form-label">Filter by Class</label>
                                    <select class="form-select" id="classFilter">
                                        <option value="">All Classes</option>
                                        <% if (locals.classes && classes.length > 0) { %>
                                            <% classes.forEach(classItem => { %>
                                                <option value="<%= classItem.gradeLevel %>-<%= classItem.section %>">
                                                    Form <%= classItem.gradeLevel %> - Section <%= classItem.section %>
                                                </option>
                                            <% }); %>
                                        <% } %>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label for="subjectFilter" class="form-label">Filter by Subject</label>
                                    <select class="form-select" id="subjectFilter">
                                        <option value="">All Subjects</option>
                                        <% if (locals.subjects && subjects.length > 0) { %>
                                            <% subjects.forEach(subject => { %>
                                                <option value="<%= subject.name %>"><%= subject.name %></option>
                                            <% }); %>
                                        <% } %>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label for="gradeFilter" class="form-label">Filter by Grade</label>
                                    <select class="form-select" id="gradeFilter">
                                        <option value="">All Grades</option>
                                        <option value="A">A</option>
                                        <option value="B">B</option>
                                        <option value="C">C</option>
                                        <option value="D">D</option>
                                        <option value="F">F</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Results Table -->
                    <div class="card">
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover" id="resultsTable">
                                    <thead>
                                        <tr>
                                            <th>Student</th>
                                            <th>Class</th>
                                            <th>Subject</th>
                                            <th>Exam Type</th>
                                            <th>Grade</th>
                                            <% if (user.role === 'admin' || user.role === 'teacher') { %>
                                                <th>Actions</th>
                                            <% } %>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (results && results.length > 0) { %>
                                            <% results.forEach(result => { %>
                                                <tr>
                                                    <td>
                                                        <%= result.student && result.student.firstName ? 
                                                            result.student.firstName + ' ' + result.student.lastName : 
                                                            result.studentId %>
                                                    </td>
                                                    <td>
                                                        <% if (result.classObj && result.classObj.gradeLevel && result.classObj.section) { %>
                                                            Form <%= result.classObj.gradeLevel %> - Section <%= result.classObj.section %>
                                                        <% } else if (result.student && result.student.gradeLevel && result.student.section) { %>
                                                            Form <%= result.student.gradeLevel %> - Section <%= result.student.section %>
                                                        <% } else { %>
                                                            Unknown
                                                        <% } %>
                                                    </td>
                                                    <td><%= result.subject %></td>
                                                    <td><%= result.examType %></td>
                                                    <td>
                                                        <span class="badge bg-<%= 
                                                            result.grade === 'A' ? 'success' :
                                                            result.grade === 'B' ? 'primary' :
                                                            result.grade === 'C' ? 'info' :
                                                            result.grade === 'D' ? 'warning' :
                                                            'danger'
                                                        %>">
                                                            <%= result.grade %>
                                                        </span>
                                                    </td>
                                                    <% if (user.role === 'admin' || user.role === 'teacher') { %>
                                                        <td>
                                                            <div class="action-buttons">
                                                                <a href="/results/edit/<%= result._id %>" class="btn btn-warning" title="Edit Result">
                                                                    <i class="fas fa-edit"></i>
                                                                </a>
                                                                <form class="delete-form" action="/results/delete/<%= result._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this result?')">
                                                                    <button type="submit" class="btn btn-danger" title="Delete Result">
                                                                        <i class="fas fa-trash"></i>
                                                                    </button>
                                                                </form>
                                                            </div>
                                                        </td>
                                                    <% } %>
                                                </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="<%= (user.role === 'admin' || user.role === 'teacher') ? 6 : 5 %>" class="text-center">No results found</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Add Result Modal (Only for Teachers) -->
                <% if (user.role === 'teacher') { %>
                <div class="modal fade" id="addResultModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Add New Result</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <form action="/results/add" method="POST">
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label class="form-label">Exam</label>
                                        <select name="examId" class="form-select" required>
                                            <option value="">Select Exam</option>
                                            <% if (exams && exams.length > 0) { %>
                                                <% exams.forEach(exam => { %>
                                                    <option value="<%= exam._id %>">
                                                        <%= exam.name %> - <%= exam.subject && exam.subject.name ? exam.subject.name : '' %>
                                                    </option>
                                                <% }); %>
                                            <% } %>
                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Student</label>
                                        <select name="studentId" class="form-select" required>
                                            <option value="">Select Student</option>
                                            <% if (students && students.length > 0) { %>
                                                <% students.forEach(student => { %>
                                                    <option value="<%= student._id %>">
                                                        <%= student.firstName %> <%= student.lastName %> (<%= student.studentId %>)
                                                    </option>
                                                <% }); %>
                                            <% } %>
                                        </select>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label class="form-label">Marks Obtained</label>
                                                <input type="number" name="marksObtained" class="form-control" min="0" step="0.01" required>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label class="form-label">Total Marks</label>
                                                <input type="number" name="totalMarks" class="form-control" min="0" step="0.01" required>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Grade</label>
                                        <select name="grade" class="form-select" required>
                                            <option value="">Select Grade</option>
                                            <option value="A+">A+ (90-100%)</option>
                                            <option value="A">A (80-89%)</option>
                                            <option value="B+">B+ (70-79%)</option>
                                            <option value="B">B (60-69%)</option>
                                            <option value="C+">C+ (50-59%)</option>
                                            <option value="C">C (40-49%)</option>
                                            <option value="D">D (30-39%)</option>
                                            <option value="F">F (Below 30%)</option>
                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Remarks</label>
                                        <textarea name="remarks" class="form-control" rows="3"></textarea>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Add Result</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <% } %>
            </main>
        </div>
    </div>

    <!-- Bootstrap 5.3.2 Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- jQuery (if needed) -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    
    <!-- Custom JavaScript -->
    <script src="/js/main.js"></script>

    <script>
    // Search and Filter Functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const classFilter = document.getElementById('classFilter');
        const subjectFilter = document.getElementById('subjectFilter');
        const gradeFilter = document.getElementById('gradeFilter');
        const resultsTable = document.getElementById('resultsTable');
        const tableRows = resultsTable.querySelectorAll('tbody tr');

        function filterResults() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedClass = classFilter.value;
            const selectedSubject = subjectFilter.value;
            const selectedGrade = gradeFilter.value;

            tableRows.forEach(row => {
                const studentName = row.cells[0]?.textContent.toLowerCase() || '';
                const className = row.cells[1]?.textContent || '';
                const subjectName = row.cells[2]?.textContent || '';
                const gradeText = row.cells[4]?.textContent || '';

                const matchesSearch = studentName.includes(searchTerm);
                const matchesClass = !selectedClass || className.includes(selectedClass);
                const matchesSubject = !selectedSubject || subjectName.includes(selectedSubject);
                const matchesGrade = !selectedGrade || gradeText.includes(selectedGrade);

                if (matchesSearch && matchesClass && matchesSubject && matchesGrade) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        // Add event listeners
        if (searchInput) searchInput.addEventListener('input', filterResults);
        if (classFilter) classFilter.addEventListener('change', filterResults);
        if (subjectFilter) subjectFilter.addEventListener('change', filterResults);
        if (gradeFilter) gradeFilter.addEventListener('change', filterResults);

        // Handle delete confirmation and form submission
        const deleteForms = document.querySelectorAll('.delete-form');
        deleteForms.forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const studentName = this.closest('tr').querySelector('td:first-child').textContent;
                const subjectName = this.closest('tr').querySelector('td:nth-child(3)').textContent;
                const resultId = this.action.split('/').pop();
                
                if (confirm(`Are you sure you want to delete the result for "${studentName}" in "${subjectName}"? This action cannot be undone.`)) {
                    // Show loading state
                    const submitBtn = this.querySelector('button[type="submit"]');
                    const originalText = submitBtn.innerHTML;
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                    submitBtn.disabled = true;
                    
                    // Submit the form
                    this.submit();
                }
            });
        });

        // Auto-calculate grade in modal
        const modal = document.getElementById('addResultModal');
        if (modal) {
            const marksObtainedInput = modal.querySelector('input[name="marksObtained"]');
            const totalMarksInput = modal.querySelector('input[name="totalMarks"]');
            const gradeSelect = modal.querySelector('select[name="grade"]');
            
            function calculateGrade() {
                const marks = parseFloat(marksObtainedInput.value) || 0;
                const total = parseFloat(totalMarksInput.value) || 0;
                
                if (total > 0) {
                    const percentage = (marks / total) * 100;
                    let grade = '';
                    
                    if (percentage >= 90) grade = 'A+';
                    else if (percentage >= 80) grade = 'A';
                    else if (percentage >= 70) grade = 'B+';
                    else if (percentage >= 60) grade = 'B';
                    else if (percentage >= 50) grade = 'C+';
                    else if (percentage >= 40) grade = 'C';
                    else if (percentage >= 30) grade = 'D';
                    else grade = 'F';
                    
                    gradeSelect.value = grade;
                }
            }
            
            marksObtainedInput.addEventListener('input', calculateGrade);
            totalMarksInput.addEventListener('input', calculateGrade);
        }

        // Add success/error message handling
        const flashMessages = document.querySelectorAll('.alert');
        flashMessages.forEach(message => {
            // Auto-hide success messages after 5 seconds
            if (message.classList.contains('alert-success')) {
                setTimeout(() => {
                    message.style.transition = 'opacity 0.5s';
                    message.style.opacity = '0';
                    setTimeout(() => message.remove(), 500);
                }, 5000);
            }
        });
    });

    // Export Results Function
    function exportResults() {
        const table = document.getElementById('resultsTable');
        const rows = table.querySelectorAll('tbody tr:not([style*="display: none"])');
        
        let csvContent = "data:text/csv;charset=utf-8,";
        
        // Add headers
        const headers = [];
        const headerRow = table.querySelector('thead tr');
        headerRow.querySelectorAll('th').forEach(th => {
            headers.push(th.textContent.trim());
        });
        csvContent += headers.join(',') + '\n';
        
        // Add data rows
        rows.forEach(row => {
            const rowData = [];
            row.querySelectorAll('td').forEach((cell, index) => {
                // Skip the Actions column
                if (index < headers.length - 1) {
                    let cellText = cell.textContent.trim();
                    // Remove HTML tags and clean up
                    cellText = cellText.replace(/<[^>]*>/g, '');
                    // Escape commas and quotes
                    if (cellText.includes(',') || cellText.includes('"')) {
                        cellText = '"' + cellText.replace(/"/g, '""') + '"';
                    }
                    rowData.push(cellText);
                }
            });
            csvContent += rowData.join(',') + '\n';
        });
        
        // Create download link
        const encodedUri = encodeURI(csvContent);
        const link = document.createElement('a');
        link.setAttribute('href', encodedUri);
        link.setAttribute('download', 'exam_results.csv');
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }

    // Check Data Freshness Function
    function checkDataFreshness() {
        const table = document.getElementById('resultsTable');
        const rows = table.querySelectorAll('tbody tr');
        
        console.log('🔍 Checking data freshness...');
        console.log(`📊 Total rows found: ${rows.length}`);
        
        let hasRecentData = false;
        rows.forEach((row, index) => {
            const cells = row.querySelectorAll('td');
            if (cells.length > 0) {
                const studentName = cells[0]?.textContent.trim();
                const grade = cells[4]?.textContent.trim();
                console.log(`Row ${index + 1}: ${studentName} - Grade: ${grade}`);
                
                // Check if this looks like the updated data
                if (grade === 'B') {
                    hasRecentData = true;
                    console.log(`✅ Found updated data: ${studentName} with grade ${grade}`);
                }
            }
        });
        
        if (!hasRecentData) {
            console.log('⚠️ No updated data found - page might be cached');
            alert('No updated data found. The page might be showing cached data. Try refreshing the page.');
        } else {
            console.log('✅ Updated data found');
            alert('Updated data found! The page is showing fresh data.');
        }
    }
    </script>
</body>
</html> 