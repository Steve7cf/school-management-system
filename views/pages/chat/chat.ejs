<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat with <%= otherParticipant.firstName %> <%= otherParticipant.lastName %> - School Management System</title>
    
    <!-- Bootstrap 5.3.2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome 6.5.1 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
    
    <style>
        html, body {
            height: 100%;
            overflow: hidden;
        }

        body {
            display: flex;
            flex-direction: column;
        }

        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            min-height: 0;
        }

        .chat-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            min-height: 0;
        }
        
        .chat-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            padding: 0.75rem 1rem;
            flex-shrink: 0;
        }
        
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
            background-color: #f8f9fa;
        }
        
        .chat-input {
            background-color: white;
            border-top: 1px solid #dee2e6;
            padding: 0.5rem 1rem;
            flex-shrink: 0;
        }
        
        .message {
            margin-bottom: 1rem;
            display: flex;
            align-items: flex-start;
            flex-direction: row;
        }
        
        .message.sent {
            justify-content: flex-end;
        }
        
        .message.received {
            justify-content: flex-start;
        }
        
        .message-bubble {
            max-width: 85%;
            padding: 0.75rem 1rem;
            border-radius: 1rem;
            position: relative;
            word-wrap: break-word;
        }
        
        .message.sent .message-bubble {
            background-color: #007bff;
            color: white;
            border-bottom-right-radius: 0.25rem;
        }
        
        .message.received .message-bubble {
            background-color: white;
            color: #212529;
            border: 1px solid #dee2e6;
            border-bottom-left-radius: 0.25rem;
        }
        
        .message-time {
            font-size: 0.75rem;
            color: #6c757d;
            margin-top: 0.25rem;
        }
        
        .message.sent .message-time {
            text-align: right;
        }
        
        .message.received .message-time {
            text-align: left;
        }
        
        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #007bff;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin: 0 0.5rem;
            flex-shrink: 0;
        }

        .message.sent .message-content-wrapper {
            order: 1;
        }
        .message.sent .avatar {
            order: 2;
        }
        
        .avatar.sent {
            background-color: #28a745;
        }
        
        .message-content-wrapper {
            display: flex;
            flex-direction: column;
        }

        .message.sent .message-content-wrapper {
            align-items: flex-end;
        }

        .message.received .message-content-wrapper {
            align-items: flex-start;
        }

        .typing-indicator {
            display: none;
            padding: 0.5rem 1rem;
            color: #6c757d;
            font-style: italic;
        }
        
        .message-actions {
            position: absolute;
            top: -0.5rem;
            right: -0.5rem;
            display: none;
            background-color: white;
            border: 1px solid #dee2e6;
            border-radius: 0.25rem;
            padding: 0.25rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            z-index: 10;
        }
        
        .message:hover .message-actions {
            display: block;
        }
        
        .message-actions button {
            border: none;
            background: none;
            padding: 0.25rem;
            color: #6c757d;
            cursor: pointer;
        }
        
        .message-actions button:hover {
            color: #dc3545;
        }
        
        .reply-message {
            background-color: #e9ecef;
            border-left: 3px solid #007bff;
            padding: 0.5rem;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            color: #6c757d;
        }
        
        .role-badge {
            font-size: 0.6rem;
            padding: 0.2rem 0.4rem;
            border-radius: 0.25rem;
            text-transform: uppercase;
            font-weight: bold;
            vertical-align: middle;
        }
        
        .role-admin { background-color: #dc3545; color: white; }
        .role-teacher { background-color: #28a745; color: white; }
        .role-parent { background-color: #ffc107; color: black; }
        .role-student { background-color: #17a2b8; color: white; }

        @media (max-width: 576px) {
            .navbar {
                flex-shrink: 0;
            }
            .chat-header .d-flex {
                flex-wrap: wrap;
            }
            .chat-header h5 {
                font-size: 1rem;
            }
            .chat-header small {
                font-size: 0.8rem;
            }
            .message-bubble {
                max-width: 90%;
            }
            .main-content {
                padding: 0 !important;
            }
            .container-fluid.main-content {
                height: calc(100% - 56px); /* Adjust based on navbar height */
            }
        }
    </style>
</head>
<body>
    <!-- Top Navbar with toggler -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary sticky-top">
        <div class="container-fluid">
            <button class="navbar-toggler me-2" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebarOffcanvas" aria-controls="sidebarOffcanvas" aria-label="Toggle sidebar">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <a class="navbar-brand fw-bold" href="/dashboard">
                <span class="d-none d-sm-inline">School Management System</span>
                <span class="d-inline d-sm-none">SMS</span>
            </a>
            
            <div class="d-flex align-items-center">
                <a href="/chat" class="btn btn-outline-light btn-sm me-2">
                    <i class="fas fa-arrow-left me-1"></i>Back
                </a>
            </div>
        </div>
    </nav>

    <!-- Offcanvas Sidebar -->
    <%- include('../../partials/offcanvas-sidebar') %>

    <!-- Main Content -->
    <div class="container-fluid main-content px-0">
        <div class="row g-0 h-100">
            <div class="col-12 h-100">
                <div class="card shadow-sm chat-container rounded-0 border-0">
                    <!-- Chat Header -->
                    <div class="chat-header">
                        <div class="d-flex align-items-center">
                            <div class="avatar me-3">
                                <%= otherParticipant.firstName ? otherParticipant.firstName.charAt(0).toUpperCase() : 'U' %>
                            </div>
                            <div>
                                <h5 class="mb-0">
                                    <%= otherParticipant.firstName %> <%= otherParticipant.lastName %>
                                    <span class="role-badge role-<%= otherParticipant.role || 'user' %> ms-2">
                                        <%= otherParticipant.role || 'User' %>
                                    </span>
                                </h5>
                                <small class="text-muted d-block">
                                    <% if (otherParticipant.email) { %>
                                        <i class="fas fa-envelope me-1"></i><%= otherParticipant.email %>
                                    <% } %>
                                </small>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Chat Messages -->
                    <div class="chat-messages" id="chatMessages">
                        <% messages.forEach(msg => { %>
                            <div class="message <%= msg.sender._id.toString() === user.id.toString() ? 'sent' : 'received' %>" data-message-id="<%= msg._id %>">
                                <% if (msg.sender._id.toString() !== user.id.toString()) { %>
                                    <div class="avatar">
                                        <%= msg.sender.firstName ? msg.sender.firstName.charAt(0).toUpperCase() : 'U' %>
                                    </div>
                                <% } %>
                                
                                <div class="message-content-wrapper">
                                    <div class="message-bubble">
                                        <% if (msg.replyTo) { %>
                                            <div class="reply-message">
                                                <i class="fas fa-reply me-1"></i>
                                                <%= msg.replyTo.message.length > 50 ? msg.replyTo.message.substring(0, 50) + '...' : msg.replyTo.message %>
                                            </div>
                                        <% } %>
                                        
                                        <div class="message-content">
                                            <%= msg.message %>
                                        </div>
                                        
                                        <div class="message-actions">
                                            <button class="reply-btn" title="Reply">
                                                <i class="fas fa-reply"></i>
                                            </button>
                                            <% if (msg.sender._id.toString() === user.id.toString()) { %>
                                                <button class="delete-btn" title="Delete">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="message-time">
                                        <%= new Date(msg.createdAt).toLocaleString() %>
                                        <% if (msg.sender._id.toString() === user.id.toString() && msg.read) { %>
                                            <i class="fas fa-check-double text-primary ms-1" title="Read"></i>
                                        <% } %>
                                    </div>
                                </div>
                                
                                <% if (msg.sender._id.toString() === user.id.toString()) { %>
                                    <div class="avatar sent">
                                        <%= msg.sender.firstName ? msg.sender.firstName.charAt(0).toUpperCase() : 'U' %>
                                    </div>
                                <% } %>
                            </div>
                        <% }) %>
                    </div>
                    
                    <!-- Typing Indicator -->
                    <div class="typing-indicator" id="typingIndicator">
                        <i class="fas fa-circle fa-pulse me-1"></i>
                        <%= otherParticipant.firstName %> is typing...
                    </div>
                    
                    <!-- Chat Input -->
                    <div class="chat-input">
                        <form id="messageForm" class="d-flex gap-2 align-items-center">
                            <input type="hidden" id="conversationId" value="<%= conversationId %>">
                            <input type="hidden" id="replyTo" value="">
                            
                            <div class="flex-grow-1">
                                <textarea 
                                    id="messageInput" 
                                    class="form-control" 
                                    rows="1" 
                                    placeholder="Type your message..."
                                    maxlength="1000"
                                    style="resize: none;"
                                ></textarea>
                            </div>
                            
                            <button type="submit" class="btn btn-primary rounded-circle" id="sendButton" style="width: 40px; height: 40px; flex-shrink: 0;">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </form>
                        
                        <div id="replyPreview" class="mt-2 p-2 bg-light border rounded" style="display: none;">
                            <small class="text-muted">Replying to:</small>
                            <div class="reply-text"></div>
                            <button type="button" class="btn btn-sm btn-outline-secondary mt-1" onclick="cancelReply()">
                                <i class="fas fa-times me-1"></i>Cancel Reply
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        const chatMessages = document.getElementById('chatMessages');
        const messageForm = document.getElementById('messageForm');
        const messageInput = document.getElementById('messageInput');
        const sendButton = document.getElementById('sendButton');

        const otherParticipant = JSON.parse('<%- JSON.stringify(otherParticipant) %>');
        const currentUser = JSON.parse('<%- JSON.stringify(user) %>');

        const conversationId = document.getElementById('conversationId').value;
        const replyToInput = document.getElementById('replyTo');
        const replyPreview = document.getElementById('replyPreview');
        const replyPreviewText = replyPreview.querySelector('.reply-text');
        
        // Scroll to bottom of messages
        function scrollToBottom() {
            setTimeout(() => {
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }, 0);
        }
        
        // Add message to chat
        function addMessage(message, isSent = true) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isSent ? 'sent' : 'received'}`;
            messageDiv.dataset.messageId = message._id;

            const time = new Date(message.createdAt).toLocaleString();
            const readIcon = (isSent && message.read) ? `<i class="fas fa-check-double text-primary ms-1" title="Read"></i>` : '';
            const senderInitial = message.sender.firstName ? message.sender.firstName.charAt(0).toUpperCase() : 'U';

            const avatarHtml = `<div class="avatar ${isSent ? 'sent' : ''}">${senderInitial}</div>`;

            const replyHtml = message.replyTo ? 
                `<div class="reply-message"><i class="fas fa-reply me-1"></i>${message.replyTo.message.substring(0, 50)}...</div>` : '';

            messageDiv.innerHTML = `
                ${!isSent ? avatarHtml : ''}
                <div class="message-content-wrapper">
                    <div class="message-bubble">
                        ${replyHtml}
                        <div class="message-content">${message.message}</div>
                        <div class="message-actions">
                            <button class="reply-btn" title="Reply"><i class="fas fa-reply"></i></button>
                            ${isSent ? `<button class="delete-btn" title="Delete"><i class="fas fa-trash"></i></button>` : ''}
                        </div>
                    </div>
                    <div class="message-time">${time} ${readIcon}</div>
                </div>
                ${isSent ? avatarHtml : ''}
            `;
            
            chatMessages.appendChild(messageDiv);
            scrollToBottom();
        }
        
        // Send message
        async function sendMessage() {
            const message = messageInput.value.trim();
            if (!message) return;
            
            const formData = {
                receiverId: otherParticipant._id,
                receiverRole: otherParticipant.role,
                message,
                conversationId,
                replyTo: replyToInput.value || null
            };
            
            try {
                sendButton.disabled = true;
                sendButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                const response = await fetch('/chat/send', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json', },
                    body: JSON.stringify(formData),
                    credentials: 'include'
                });
                
                const data = await response.json();
                
                if (data.success) {
                    addMessage(data.message, true);
                    messageInput.value = '';
                    cancelReply();
                    autoResizeTextarea();
                } else {
                    alert('Error sending message: ' + data.message);
                }
            } catch (error) {
                console.error('Error sending message:', error);
                alert('An error occurred while sending the message.');
            } finally {
                sendButton.disabled = false;
                sendButton.innerHTML = '<i class="fas fa-paper-plane"></i>';
            }
        }
        
        // Reply to message
        function replyToMessage(messageId, messageText) {
            replyToInput.value = messageId;
            replyPreviewText.textContent = messageText;
            replyPreview.style.display = 'block';
            messageInput.focus();
        }
        
        // Cancel reply
        function cancelReply() {
            replyToInput.value = '';
            replyPreview.style.display = 'none';
        }
        
        // Delete message
        async function deleteMessage(messageId) {
            if (!confirm('Are you sure you want to delete this message?')) return;
            
            try {
                const response = await fetch(`/chat/message/${messageId}`, {
                    method: 'DELETE',
                    credentials: 'include'
                });
                const data = await response.json();
                
                if (data.success) {
                    const messageElement = document.querySelector(`[data-message-id="${messageId}"]`);
                    if (messageElement) messageElement.remove();
                } else {
                    alert('Error deleting message: ' + data.message);
                }
            } catch (error) {
                console.error('Error deleting message:', error);
                alert('An error occurred while deleting the message.');
            }
        }

        function autoResizeTextarea() {
            messageInput.style.height = 'auto';
            messageInput.style.height = (messageInput.scrollHeight) + 'px';
        }
        
        // Event listeners
        messageForm.addEventListener('submit', (e) => {
            e.preventDefault();
            sendMessage();
        });
        
        chatMessages.addEventListener('click', function(e) {
            const replyBtn = e.target.closest('.reply-btn');
            const deleteBtn = e.target.closest('.delete-btn');

            if (replyBtn) {
                const messageEl = e.target.closest('.message');
                const messageId = messageEl.dataset.messageId;
                const messageContent = messageEl.querySelector('.message-content').textContent;
                replyToMessage(messageId, messageContent);
            }

            if (deleteBtn) {
                const messageEl = e.target.closest('.message');
                const messageId = messageEl.dataset.messageId;
                deleteMessage(messageId);
            }
        });
        
        messageInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });
        
        messageInput.addEventListener('input', autoResizeTextarea);
        
        // Initial setup
        window.addEventListener('load', () => {
            scrollToBottom();
            messageInput.focus();
            autoResizeTextarea();
        });

    </script>
</body>
</html>