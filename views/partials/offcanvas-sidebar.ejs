<div class="offcanvas offcanvas-start" tabindex="-1" id="sidebarOffcanvas" aria-labelledby="sidebarOffcanvasLabel">
  <div class="offcanvas-header">
    <div class="d-flex align-items-center">
      <img src="<%= user.avatar || '/images/user.png' %>" alt="User Avatar" class="rounded-circle me-3" style="width: 45px; height: 45px; object-fit: cover; border: 2px solid #5D3FD3;">
      <div>
        <h6 class="mb-0 fw-bold text-dark"><%= user.firstName %> <%= user.lastName %></h6>
        <small class="text-muted text-capitalize"><%= user.role %></small>
      </div>
    </div>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body p-0">
    <ul class="nav flex-column">
      <% if (user) { %>
        <li class="nav-item">
          <a class="nav-link <%= path.startsWith('/dashboard') ? 'active' : '' %>" href="/dashboard">
            <i class="fas fa-home me-2"></i> Dashboard
          </a>
        </li>
        <% if (user.role === 'admin') { %>
          <li class="nav-item"><a class="nav-link <%= path.startsWith('/students') ? 'active' : '' %>" href="/students"><i class="fas fa-user-graduate me-2"></i> Students</a></li>
          <li class="nav-item"><a class="nav-link <%= path.startsWith('/teachers') ? 'active' : '' %>" href="/teachers"><i class="fas fa-chalkboard-teacher me-2"></i> Teachers</a></li>
          <li class="nav-item"><a class="nav-link <%= path.startsWith('/classes') ? 'active' : '' %>" href="/classes"><i class="fas fa-school me-2"></i> Classes</a></li>
        <% } %>
        <% if (["admin", "teacher"].includes(user.role)) { %>
          <li class="nav-item"><a class="nav-link <%= path.startsWith('/subjects') ? 'active' : '' %>" href="/subjects"><i class="fas fa-book me-2"></i> Subjects</a></li>
        <% } %>
        <% if (["admin", "teacher", "student", "parent"].includes(user.role)) { %>
          <li class="nav-item"><a class="nav-link <%= path.startsWith('/attendance') ? 'active' : '' %>" href="/attendance"><i class="fas fa-calendar-check me-2"></i> Attendance</a></li>
        <% } %>
        <!-- Chat Navigation for all user types -->
        <li class="nav-item">
          <a class="nav-link <%= path.startsWith('/chat') ? 'active' : '' %>" href="/chat">
            <i class="fas fa-comments me-2"></i> 
            Chat
            <span id="chatUnreadBadge" class="badge bg-danger ms-auto" style="display: none;"></span>
          </a>
        </li>
        <li class="nav-item"><a class="nav-link <%= path.startsWith('/exams') ? 'active' : '' %>" href="/exams"><i class="fas fa-file-alt me-2"></i> Exams</a></li>
        <li class="nav-item"><a class="nav-link <%= path.startsWith('/results') ? 'active' : '' %>" href="/results"><i class="fas fa-chart-bar me-2"></i> Results</a></li>
        <% if (user.role === 'admin') { %>
          <li class="nav-item"><a class="nav-link <%= path.startsWith('/announcements') ? 'active' : '' %>" href="/announcements"><i class="fas fa-bullhorn me-2"></i> Announcements</a></li>
          <li class="nav-item"><a class="nav-link <%= path.startsWith('/logs') ? 'active' : '' %>" href="/logs"><i class="fas fa-clipboard-list me-2"></i> System Logs</a></li>
        <% } %>
        <li class="nav-item"><a class="nav-link <%= path.startsWith('/profile') ? 'active' : '' %>" href="/profile"><i class="fas fa-user-circle me-2"></i> Profile</a></li>
        <li class="nav-item"><a class="nav-link text-danger" href="/logout"><i class="fas fa-sign-out-alt me-2"></i> Logout</a></li>
      <% } else { %>
        <li class="nav-item"><a class="nav-link" href="/login"><i class="fas fa-sign-in-alt me-2"></i> Login</a></li>
      <% } %>
    </ul>
  </div>
</div>

<script>
// Update chat unread count in sidebar
async function updateChatUnreadCount() {
    try {
        const response = await fetch('/chat/unread-count', { credentials: 'include' });
        if (!response.ok) {
            // If response is not JSON, it might be a redirect (e.g., to login)
            // We can just stop and not show an error
            return;
        }
        const data = await response.json();
        const unreadBadge = document.getElementById('chatUnreadBadge');
        
        if (data.unreadCount > 0) {
            unreadBadge.textContent = data.unreadCount;
            unreadBadge.style.display = 'inline-block'; // Use inline-block for better alignment
        } else {
            unreadBadge.style.display = 'none';
        }
    } catch (error) {
        // This can happen if the response is not valid JSON (e.g. login page)
        // We can safely ignore it in this case.
        console.log('Could not fetch unread count, user might be logged out.');
    }
}

// Update unread count every 30 seconds
setInterval(updateChatUnreadCount, 30000);

// Initial update
document.addEventListener('DOMContentLoaded', updateChatUnreadCount);
</script> 